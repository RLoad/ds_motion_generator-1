#ifndef __DS_MOTION_GENERATOR_H__
#define __DS_MOTION_GENERATOR_H__

#include <Eigen/Eigen>
#include "ros/ros.h"
#include "geometry_msgs/Pose.h"
#include "geometry_msgs/Twist.h"



class DSMotionGenerator {


protected:

	double frequency_;
	double max_desired_vel_;
	std::string path_to_cds_gmm_;


	// A handle to the node in ros
	ros::NodeHandle nh_;
	// Rate of the run loop
	ros::Rate loop_rate_;
	// Publisher for the desired velocity generated by SED
	ros::Publisher pub_desired_twist_;
	// Subscriber for real position feed to SED
	ros::Subscriber sub_real_pose_;
	// Twist message for the desired velocity
	geometry_msgs::Twist desired_velocity_;
	// Pose message for the real velocity
	geometry_msgs::Pose real_pose_;


public:
	DSMotionGenerator(ros::NodeHandle &n, double frequency,
	                  std::string path_to_cds_gmm, double max_desired_vel);

	void Init();

	void Run();

private:
	void UpdateRealPosition(const geometry_msgs::Pose::ConstPtr& msg);

protected:

	void ComputeDesiredVelocity(Eigen::VectorXd &desired_twist, Eigen::VectorXd &current_pose);

};


#endif
